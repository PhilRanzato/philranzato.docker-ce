---
- name: "Uninstall old versions"
  apt:
    name: "{{ item }}"
    state: absent
  become: true
  loop:
  - docker
  - docker-engine
  - docker.io
  - containerd
  - runc

- name: "Update Apt"
  apt:
    update_cache: yes
  become: true

- name: "Install dependencies"
  apt:
    name: "{{ item }}"
    state: latest
  become: true
  loop:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common

- name: "Add Dockerâ€™s official GPG key"
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true

- name: "Add Docker Repository"
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present
  become: true

- name: "Update Apt"
  apt:
    update_cache: yes
  become: true

- name: "Build the version name"
  set_fact:
    docker_ce_package_version_ubuntu: "docker-ce{% if docker.version is defined %}=5:{{ docker.version }}~3-0~ubuntu-{{ ansible_distribution_release }}{% endif %}"
    docker_ce_cli_package_version_ubuntu: "docker-ce-cli{% if docker.version is defined %}=5:{{ docker.version }}~3-0~ubuntu-{{ ansible_distribution_release }}{% endif %}"

- name: "Install Docker components"
  apt:
    name: "{{ item }}"
    state: present
    # allow downgrades
    force: true
  become: true
  loop:
  - "{{ docker_ce_package_version_ubuntu }}"
  - "{{ docker_ce_cli_package_version_ubuntu }}"
  - containerd.io
  notify: "Start docker"
